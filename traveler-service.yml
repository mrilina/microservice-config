server:
  port: 8081

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/

spring:
  application:
    name: traveler-service
  datasource:
    url: jdbc:h2:mem:travelerdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS travelerdb;
  config:
    import: configserver:http://localhost:8085

  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext

  sql:
    init:
      mode: always
      data-locations: classpath:data-h2.sql
      schema-locations: classpath:schema-h2.sql

  h2:
    console:
      path: /h2-console
      settings:
        web-allow-others: true

management:
health:
  circuitbreakers:
    enabled: true
endpoints:
  web:
    exposure:
      include: health

endpoint:
  health:
    show-details: always

resilience4j:
circuitbreaker:
  instances:
    ratingHotelBreaker:
      registerHealthIndicator: true
      eventConsumerBufferSize: 10
      failureRateThreshold: 50
      minimumNumberOfCalls: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 6s
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowSize: 10
      slidingWindowType: COUNT_BASED

retry:
  instances:
    ratingHotelService:
      maxAttempts: 3
      waitDuration: 3s

ratelimiter:
  instances:
    userRateLimiter:
      limitRefreshPeriod: 4s
      limitForPeriod: 2
      timeoutDuration: 2s

    userRateLimiterAllData:
      limitRefreshPeriod: 4s
      limitForPeriod: 2
      timeoutDuration: 3s