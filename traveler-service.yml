server:
  port: 8083

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

spring:
  cloud:
    discovery:
      enabled: true
  datasource:
    url: jdbc:h2:mem:travelerdb;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS travelerdb;
  application:
    name: traveler-server
  config:
    import: optional:configserver:${CONFIG_SERVER_URI:http://localhost:8888}
  profiles:
    active:
      - resilience4j
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext

  sql:
    init:
      mode: always
      data-locations: classpath:data-h2.sql
      schema-locations: classpath:schema-h2.sql

  h2:
    console:
      path: /h2-console
      settings:
        web-allow-others: true


eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}

jwt:
  password:
    encoder:
      secret: FZK2DZ82odqS13e8aENggaMbb_fAkl-nJL4AEVBX43g
      iteration: 64
      keylength: 256
  secret: b5f59337a612a2a7dc07328f3e7d1a04722967c7f06df20a499a7d3f91ff2a7e
  expiration: 3600
  issuer: fedbon

logging:
  level:
    root: INFO